@model Raffle.Web.Models.Raffle.CompleteRaffleModel

@{
    ViewData["Title"] = "Raffle - Complete";
}

<div class="text-center">
    <h1 class="display-4">Raffle Selection Complete</h1>
    <p>You're almost there!</p>
</div>

<form method="post">
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Raffle Tickets</span>
                <span class="badge badge-secondary badge-pill">@Model.TotalTickets</span>
            </h4>
            <ul class="list-group mb-3">
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">@Model.Items[i].Name</h6>
                            <small class="text-muted">@Model.Items[i].Cost p</small>
                        </div>
                        <span class="text-muted">@Model.Items[i].Amount</span>
                    </li>
                }
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total Points</span>
                    <strong>@Model.TotalPrice</strong>
                </li>
            </ul>
            <p>
                You've now selected the prizes you want to win and how many chances you'd like to have.
                Please fill in your information so we can track down winners, and note the total amount
                of points in your cart. Under the total are your instructions to complete the donation
                to MAWNJ. When you hit COMPLETE on this page, you'll get your receipt via email and be
                sent to the Darts for Dreams Donation Page where you should make your donation. We
                believe that a $1/point donation is a perfect amount. If you've miscalculated your
                tickets, just hit the BACK button on your browser and adjust your selections then
                CONTINUE again to proceed.
            </p>
        </div>

        <div class="col-md-8 order-md-1">

            <h4 class="mb-3">Customer Information</h4>
            @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                @Html.ValidationSummary(false, "Errors: ", new { @class = "alert alert-danger" })
            }
            <div class="row">
                <div class="col-md-6">
                    <label>First Name</label>
                    @Html.TextBoxFor(x => x.CustomerFirstName, null, new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    <label>Last Name</label>
                    @Html.TextBoxFor(x => x.CustomerLastName, null, new { @class = "form-control" })
                </div>
            </div>
            <div class="mb-3">
                <label>Email</label>
                @Html.TextBoxFor(x => x.CustomerEmail, null, new { @class = "form-control" })
                <label>Email Again</label>
                @Html.TextBoxFor(x => x.CustomerEmailRepeat, null, new { @class = "form-control" })
            </div>
            <div class="mb-3">
                <label>Address 1</label>
                @Html.TextBoxFor(x => x.AddressLine1, null, new { @class = "form-control" })
                <label>Address 2</label>
                @Html.TextBoxFor(x => x.AddressLine2, null, new { @class = "form-control" })
            </div>
            <div class="row">
                <div class="col-md-5 mb-3">
                    <label>City</label>
                    @Html.TextBoxFor(x => x.City, null, new { @class = "form-control" })
                </div>
                <div class="col-md-4 mb-3">
                    <label>State</label>
                    @Html.TextBoxFor(x => x.State, null, new { @class = "form-control" })
                    <div class="invalid-feedback">
                        Please provide a valid state.
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <label>Zip</label>
                    @Html.TextBoxFor(x => x.Zip, null, new { @class = "form-control", placeholder = "", required = "required" })
                    <div class="invalid-feedback">
                        Zip code required.
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <button type="submit" class="form-control btn btn-primary">Complete</button>
                </div>
                <div class="col-md-6">
                    @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-warning" })
                </div>
            </div>
        </div>

    </div>
</form>
